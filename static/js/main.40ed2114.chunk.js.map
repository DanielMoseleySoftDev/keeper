{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","Footer","Date","getFullYear","Note","props","className","title","content","onClick","onDelete","id","CreateArea","useState","note","setNote","isClicked","setIsClicked","updateNote","e","target","name","value","prevNote","onSubmit","onAdd","preventDefault","onChange","placeholder","rows","Zoom","in","Fab","type","App","notes","setNotes","deleteNote","prevNotes","filter","index","map","key","ReactDOM","render","document","getElementById"],"mappings":"iNAUeA,MARf,WACE,OACE,gCACE,4BAAI,kBAAC,IAAD,MAAJ,YCGSC,MANf,WACE,OAAQ,gCACN,8CAAgB,IAAIC,MAAOC,iB,iBCShBC,MAVf,SAAcC,GACZ,OACE,yBAAKC,UAAU,QACb,4BAAKD,EAAME,OACX,2BAAIF,EAAMG,SACV,4BAAQC,QAAS,WAAOJ,EAAMK,SAASL,EAAMM,MAC3C,kBAAC,IAAD,S,yCCkCOC,MAvCf,SAAoBP,GAAQ,IAAD,EAEDQ,mBAAS,CAACN,MAAO,GAAIC,QAAS,KAF7B,mBAElBM,EAFkB,KAEZC,EAFY,OAGSF,oBAAS,GAHlB,mBAGlBG,EAHkB,KAGPC,EAHO,KAMzB,SAASC,EAAWC,GAAI,IAAD,EACCA,EAAEC,OAAjBC,EADc,EACdA,KAAMC,EADQ,EACRA,MACbP,GAAQ,SAACQ,GACP,OAAO,2BACFA,GADL,IAEE,CAACF,GAAOC,OASd,OAAQ,6BAEN,0BAAMhB,UAAU,cAAckB,SAAU,SAACL,GACrCd,EAAMoB,MAAMX,GAEZC,EAAQ,CAACR,MAAO,GAAIC,QAAS,KAC7BW,EAAEO,mBAEHV,GAAa,2BAAOW,SAAUT,EAAYG,KAAK,QAAQO,YAAY,QAAQN,MAAOR,EAAKP,QACxF,8BAAUoB,SAAUT,EAAYT,QAbpC,WACEQ,GAAa,IAY6CI,KAAK,UAAUO,YAAY,iBAAiBC,KAAMb,EAAY,IAAM,IAAKM,MAAOR,EAAKN,UAC5IQ,GAAa,kBAACc,EAAA,EAAD,CAAMC,IAAI,GACtB,kBAACC,EAAA,EAAD,CAAKC,KAAK,UACR,kBAAC,IAAD,WCGKC,MAjCf,WAAe,MAEarB,mBAAS,IAFtB,mBAENsB,EAFM,KAECC,EAFD,KAYb,SAASC,EAAW1B,GAClByB,GAAS,SAACE,GACR,OAAOA,EAAUC,QAAO,SAACzB,EAAM0B,GAC7B,OAAOA,IAAU7B,QAKvB,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYc,MAlBhB,SAAiBX,GACfsB,GAAS,SAACE,GACR,MAAM,GAAN,mBAAWA,GAAX,CAAsBxB,UAkBrBqB,EAAMM,KAAI,SAAC3B,EAAM0B,GAAP,OACP,kBAAC,EAAD,CAAME,IAAKF,EAAO7B,GAAI6B,EAAOjC,MAAOO,EAAKP,MAAOC,QAASM,EAAKN,QAASE,SAAU2B,OAErF,kBAAC,EAAD,QC9BNM,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.40ed2114.chunk.js","sourcesContent":["import React from \"react\";\nimport HighlightIcon from \"@material-ui/icons/Highlight\"\nfunction Header() {\n  return (\n    <header>\n      <h1><HighlightIcon />Keeper</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  return (<footer>\n    <p>Copyright Â© {new Date().getFullYear()}</p>\n  </footer>);\n};\n\nexport default Footer;\n","import React from \"react\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nfunction Note(props) {\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <button onClick={() => {props.onDelete(props.id)}}>\n        <DeleteIcon /></button>\n    </div>\n  );\n}\nexport default Note;\n","import React, {useState} from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Zoom from \"@material-ui/core/Zoom\";\nfunction CreateArea(props) {\n\n  const [note, setNote] = useState({title: \"\", content: \"\"});\n  const [isClicked, setIsClicked] = useState(false);\n\n  //Creates a new note and sets the values taken from the elements with the appropriate name\n  function updateNote(e) {\n    const {name, value} = e.target;\n    setNote((prevNote) => {\n      return {\n        ...prevNote,\n        [name]: value\n      }\n    });\n  }\n\n  function changeClicked() {\n    setIsClicked(true);\n  }\n\n  return (<div>\n    {/* Adding a note on form submit allowing prevent default submit action of reloading the page */}\n    <form className=\"create-note\" onSubmit={(e) => {\n        props.onAdd(note);\n        //Reset note values to clear input fields\n        setNote({title: \"\", content: \"\"});\n        e.preventDefault();\n      }}>\n      {isClicked && <input onChange={updateNote} name=\"title\" placeholder=\"Title\" value={note.title}/>}\n      <textarea onChange={updateNote} onClick={changeClicked} name=\"content\" placeholder=\"Take a note...\" rows={isClicked ? \"3\" : \"1\"} value={note.content}/>\n      {isClicked && <Zoom in={true}>\n        <Fab type=\"submit\">\n          <AddIcon />\n        </Fab>\n      </Zoom> }\n    </form>\n  </div>);\n}\n\nexport default CreateArea;\n","import React, { useState } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\n\nfunction App() {\n  //Create an empty notes array with state that can be accessed with the setNotes function\n  const [notes, setNotes] = useState([]);\n\n  //Combines the setNotes function with an anonymous function, returns the span of the original array with the new note\n  function addNote(note) {\n    setNotes((prevNotes) => {\n      return [...prevNotes, note];\n    });\n  }\n\n  //Uses the setNotes function to filter the original array, returing all notes except the one with the requested id\n  function deleteNote(id) {\n    setNotes((prevNotes) => {\n      return prevNotes.filter((note, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div>\n      <Header />\n      <CreateArea onAdd={addNote}/>\n      {/* Maps the notes array to note elements and providing a unique index to each note */}\n      {notes.map((note, index) => (\n          <Note key={index} id={index} title={note.title} content={note.content} onDelete={deleteNote} />\n        ))}\n      <Footer />\n    </div>\n  )\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\"\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}